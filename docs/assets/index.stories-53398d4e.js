import{a as T}from"./jsx-runtime-fd534075.js";import{r}from"./index-0cbcd92a.js";import{I as B}from"./index-b43a95bf.js";import"./_commonjsHelpers-de833af9.js";import"./index-637a0b9d.js";const H=({label:e,placeholder:f,onChange:v,onBlur:o,value:l,hint:u,hintInvalid:b,hintRequired:y,onError:i,name:E})=>{const s=/^[\+][0-9]{8,14}$/,[t,d]=r.useState(!1),[I,p]=r.useState(!0),[q,c]=r.useState(!1),V=n=>{const{value:P}=n.target;d(!s.test(P)),p(!1),v(n)},_=n=>{n.target.value||c(!1),d(!s.test(n.target.value)),o&&o(n)},x=()=>{c(!0),p(!1)},C=()=>(q||I)&&!t?u:l===""?y:t?b:u;return r.useEffect(()=>{i(t)},[t,i]),T(B,{variant:t?"error":"default",disabled:!1,label:e,placeholder:f,onChange:V,onBlur:_,onFocus:x,value:l,hint:C(),name:E})};try{inputphone.displayName="inputphone",inputphone.__docgenInfo={description:"",displayName:"inputphone",props:{label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!0,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => void)"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"string"}},hint:{defaultValue:null,description:"",name:"hint",required:!0,type:{name:"string"}},hintInvalid:{defaultValue:null,description:"",name:"hintInvalid",required:!0,type:{name:"string"}},hintRequired:{defaultValue:null,description:"",name:"hintRequired",required:!0,type:{name:"string"}},onError:{defaultValue:null,description:"",name:"onError",required:!0,type:{name:"(error: boolean) => void"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}}}}}catch{}const S={title:"InputPhone",component:H,tags:["autodocs"],parameters:{layout:"centered"},argTypes:{label:{control:"text",description:"Contenido del botón"},hint:{control:"text",description:"Contenido del botón"}}},a={args:{label:"Phone Number",placeholder:"Enter your phone number",onChange:e=>console.log("Input changed:",e.target.value),onBlur:e=>console.log("Input blurred:",e.target.value),value:"+573202502",hint:"Please enter a valid phone number.",hintInvalid:"Invalid phone number. The phone number must start with + and have 8 to 14 digits.",hintRequired:"Phone number is required.",onError:e=>console.log("Error state:",e)}};var m,h,g;a.parameters={...a.parameters,docs:{...(m=a.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    label: 'Phone Number',
    placeholder: 'Enter your phone number',
    onChange: event => console.log('Input changed:', event.target.value),
    onBlur: event => console.log('Input blurred:', event.target.value),
    value: '+573202502',
    hint: 'Please enter a valid phone number.',
    hintInvalid: 'Invalid phone number. The phone number must start with + and have 8 to 14 digits.',
    hintRequired: 'Phone number is required.',
    onError: error => console.log('Error state:', error)
  }
}`,...(g=(h=a.parameters)==null?void 0:h.docs)==null?void 0:g.source}}};const w=["Default"];export{a as Default,w as __namedExportsOrder,S as default};
