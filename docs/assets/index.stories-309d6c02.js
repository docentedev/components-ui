import{a as T}from"./jsx-runtime-fd534075.js";import{r}from"./index-0cbcd92a.js";import{I as B}from"./index-1dd2cdfa.js";import"./_commonjsHelpers-de833af9.js";import"./index.utils-3332eaf1.js";import"./index-0f030660.js";import"./index-130c2559.js";import"./index-177d311a.js";import"./Easy-dac9347f.js";import"./index-02210d9f.js";import"./index-2e846076.js";import"./index-ae9d3e9c.js";import"./index-af5faa0b.js";import"./index-339673fb.js";import"./index-65ca6685.js";import"./index-be8450de.js";import"./index-7b389540.js";import"./index-36b10e2f.js";import"./index-5eea7179.js";import"./index-d70482d4.js";import"./index-86e4212d.js";import"./index-f05aaf72.js";import"./index-c2412459.js";import"./index-7ea187ef.js";const H=({label:e,placeholder:f,onChange:v,onBlur:a,value:l,hint:i,hintInvalid:b,hintRequired:y,onError:u,name:E})=>{const s=/^[\+][0-9]{8,14}$/,[n,p]=r.useState(!1),[I,d]=r.useState(!0),[q,m]=r.useState(!1),C=t=>{const{value:P}=t.target;p(!s.test(P)),d(!1),v(t)},V=t=>{t.target.value||m(!1),p(!s.test(t.target.value)),a&&a(t)},_=()=>{m(!0),d(!1)},x=()=>(q||I)&&!n?i:l===""?y:n?b:i;return r.useEffect(()=>{u(n)},[n,u]),T(B,{variant:n?"error":"default",disabled:!1,label:e,placeholder:f,onChange:C,onBlur:V,onFocus:_,value:l,hint:x(),name:E})};try{inputphone.displayName="inputphone",inputphone.__docgenInfo={description:"",displayName:"inputphone",props:{label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!0,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => void)"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"string"}},hint:{defaultValue:null,description:"",name:"hint",required:!0,type:{name:"string"}},hintInvalid:{defaultValue:null,description:"",name:"hintInvalid",required:!0,type:{name:"string"}},hintRequired:{defaultValue:null,description:"",name:"hintRequired",required:!0,type:{name:"string"}},onError:{defaultValue:null,description:"",name:"onError",required:!0,type:{name:"(error: boolean) => void"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}}}}}catch{}const te={title:"Components/InputPhone",component:H,tags:["autodocs"],parameters:{layout:"centered"},argTypes:{label:{control:"text",description:"Contenido del botón"},hint:{control:"text",description:"Contenido del botón"}}},o={args:{label:"Phone Number",placeholder:"Enter your phone number",onChange:e=>console.log("Input changed:",e.target.value),onBlur:e=>console.log("Input blurred:",e.target.value),value:"+573202502",hint:"Please enter a valid phone number.",hintInvalid:"Invalid phone number. The phone number must start with + and have 8 to 14 digits.",hintRequired:"Phone number is required.",onError:e=>console.log("Error state:",e)}};var c,h,g;o.parameters={...o.parameters,docs:{...(c=o.parameters)==null?void 0:c.docs,source:{originalSource:`{
  args: {
    label: 'Phone Number',
    placeholder: 'Enter your phone number',
    onChange: event => console.log('Input changed:', event.target.value),
    onBlur: event => console.log('Input blurred:', event.target.value),
    value: '+573202502',
    hint: 'Please enter a valid phone number.',
    hintInvalid: 'Invalid phone number. The phone number must start with + and have 8 to 14 digits.',
    hintRequired: 'Phone number is required.',
    onError: error => console.log('Error state:', error)
  }
}`,...(g=(h=o.parameters)==null?void 0:h.docs)==null?void 0:g.source}}};const ne=["Default"];export{o as Default,ne as __namedExportsOrder,te as default};
