import{a as T}from"./jsx-runtime-fd534075.js";import{r as n}from"./index-0cbcd92a.js";import{I as B}from"./index-3a0a098a.js";import"./_commonjsHelpers-de833af9.js";/* empty css              */import"./index-727bc3da.js";import"./index-150f24d0.js";import"./index-12e24dad.js";import"./index-e60269c1.js";import"./index-55a8b1db.js";import"./index-0c2062d9.js";import"./index-94b86141.js";import"./index-b0d1d519.js";import"./index-65ca6685.js";import"./index-4cd4725f.js";import"./index-541d37a9.js";import"./index-3b419322.js";import"./index-af5faa0b.js";import"./index-36b10e2f.js";import"./index-b6ef4225.js";import"./index-9e68d7ed.js";import"./index-d70482d4.js";import"./index-1900cc27.js";import"./index-486f6668.js";import"./index-02210d9f.js";import"./index-6bf6aae2.js";import"./index-7ea187ef.js";import"./index-63de68db.js";const H=({label:e,placeholder:f,onChange:v,onBlur:a,value:i,hint:l,hintInvalid:b,hintRequired:y,onError:u,name:E})=>{const s=/^[\+][0-9]{8,14}$/,[r,p]=n.useState(!1),[I,d]=n.useState(!0),[q,m]=n.useState(!1),V=t=>{const{value:P}=t.target;p(!s.test(P)),d(!1),v(t)},_=t=>{t.target.value||m(!1),p(!s.test(t.target.value)),a&&a(t)},x=()=>{m(!0),d(!1)},C=()=>(q||I)&&!r?l:i===""?y:r?b:l;return n.useEffect(()=>{u(r)},[r,u]),T(B,{variant:r?"error":"default",disabled:!1,label:e,placeholder:f,onChange:V,onBlur:_,onFocus:x,value:i,hint:C(),name:E})};try{inputphone.displayName="inputphone",inputphone.__docgenInfo={description:"",displayName:"inputphone",props:{label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!0,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => void)"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"string"}},hint:{defaultValue:null,description:"",name:"hint",required:!0,type:{name:"string"}},hintInvalid:{defaultValue:null,description:"",name:"hintInvalid",required:!0,type:{name:"string"}},hintRequired:{defaultValue:null,description:"",name:"hintRequired",required:!0,type:{name:"string"}},onError:{defaultValue:null,description:"",name:"onError",required:!0,type:{name:"(error: boolean) => void"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}}}}}catch{}const ae={title:"InputPhone",component:H,tags:["autodocs"],parameters:{layout:"centered"},argTypes:{label:{control:"text",description:"Contenido del botón"},hint:{control:"text",description:"Contenido del botón"}}},o={args:{label:"Phone Number",placeholder:"Enter your phone number",onChange:e=>console.log("Input changed:",e.target.value),onBlur:e=>console.log("Input blurred:",e.target.value),value:"+573202502",hint:"Please enter a valid phone number.",hintInvalid:"Invalid phone number. The phone number must start with + and have 8 to 14 digits.",hintRequired:"Phone number is required.",onError:e=>console.log("Error state:",e)}};var c,h,g;o.parameters={...o.parameters,docs:{...(c=o.parameters)==null?void 0:c.docs,source:{originalSource:`{
  args: {
    label: 'Phone Number',
    placeholder: 'Enter your phone number',
    onChange: event => console.log('Input changed:', event.target.value),
    onBlur: event => console.log('Input blurred:', event.target.value),
    value: '+573202502',
    hint: 'Please enter a valid phone number.',
    hintInvalid: 'Invalid phone number. The phone number must start with + and have 8 to 14 digits.',
    hintRequired: 'Phone number is required.',
    onError: error => console.log('Error state:', error)
  }
}`,...(g=(h=o.parameters)==null?void 0:h.docs)==null?void 0:g.source}}};const ie=["Default"];export{o as Default,ie as __namedExportsOrder,ae as default};
